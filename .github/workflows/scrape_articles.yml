name: Scrape F1 Articles

on:
  # This allows you to run the workflow manually from the Actions tab
  # The scheduled run has been removed for manual testing.
  workflow_dispatch:

jobs:
  scrape:
    runs-on: ubuntu-latest

    steps:
      # 1. Check out your repository code so the runner can access it
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Set up a specific version of Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # 3. Install your Python libraries from a requirements file
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 4. Install the system dependencies required by Playwright
      - name: Install Playwright system dependencies
        run: sudo playwright install-deps

      # 5. Install the browser binaries for Playwright
      - name: Install Playwright browsers
        run: playwright install

      # 6. Run your scraper script
      #    We pass the Supabase credentials as environment variables using GitHub Secrets
      - name: Run scraper script
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
        run: python scraper.py # UPDATED to use scraper.py

      # 7. Configure Git to be able to commit the updated state file
      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      # 8. Commit and push the updated `processed-urls.txt` file
      - name: Commit and Push updated URLs file
        run: |
          git add processed-urls.txt
          # The following command checks if there are any changes to commit
          git diff --quiet --exit-code processed-urls.txt || git commit -m "Update processed URLs list"
          git push
